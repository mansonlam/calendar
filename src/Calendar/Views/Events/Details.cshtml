@model Calendar.Models.Event

@inject Calendar.Models.Services.StaticListOfValuesService LOVs
@inject Calendar.Controllers.AppSettingsController appsettings

@{
    ViewData["Title"] = "Event Details";
}

<h2>@ViewData["Title"]</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Subject)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Subject)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.TaskDescription)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.TaskDescription)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StartDateTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StartDateTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EndDateTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EndDateTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AffectedHosts)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AffectedHosts)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AffectedProjects)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AffectedProjects)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AffectedTeams)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.AffectedTeams)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Category)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Environment)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Environment)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RiskLevel)
        </dt>
        <dd>
            @foreach (var s in LOVs.ListRiskLevels())
            {
                if (Model.RiskLevel == s.Value)
                {
                    <span class="cal-risklevel-@s.Value" stylex="font-size:14px">@s.Name</span>
                    break;
                }
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ActionBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ActionBy)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.HealthCheckBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.HealthCheckBy)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Reference)
        </dt>
        <dd>
            @if (!System.String.IsNullOrEmpty(Model.Reference))
            {
                <a target=_blank href="@appsettings.CM_Url?i_CRN=@Model.Reference">@Html.DisplayFor(model => model.Reference)</a>
            }            
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Result)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Result)
        </dd>
    </dl>
</div>
<div>
    @if (@ViewBag.Redir != null)
    {
        <span @(User.IsInRole("Admins") ? "" : "hidden")><a asp-action="Edit" asp-route-id="@Model.ID" asp-route-redir="@Uri.UnescapeDataString(ViewBag.Redir)">Edit</a> |</span>
        <a href="@Uri.UnescapeDataString(ViewBag.Redir)">Back</a>
    }
    else
    {
        <span @(User.IsInRole("Admins") ? "" : "hidden")><a asp-action="Edit" asp-route-id="@Model.ID" asp-route-redir="">Edit</a> |</span>
        <a asp-action="Index">Back</a>
    }
    
</div>
