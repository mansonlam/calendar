@model Calendar.Models.CalendarViewModels.CalendarEventViewModel

@inject Calendar.Controllers.AppSettingsController appsettings

@{
    ViewData["Title"] = "Event Details";
    
    string username = (User.Identity.IsAuthenticated)? User.Claims.Where(m => m.Type == "username").SingleOrDefault().Value : "";
}

@functions {

    Boolean IsTeamAcknowledged(string pTeam)
    {
        foreach(var item in Model.Acks)
        {
            if (item.Team == pTeam)
                return true;
        }
        return false;
    }

}

<h2>@ViewData["Title"] - ID @Html.DisplayFor(model => model.Event.ID), @Html.DisplayFor(model => model.EventStatus)</h2>

<div style="position:relative;">
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Event.Subject)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Event.Subject)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.TaskDescription)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Event.TaskDescription)
        </dd>

        <dt>
            @*@Html.DisplayNameFor(model => model.StartDateTime)*@
            Duration
        </dt>
        <dd id="idEventDuration">
            @Html.DisplayFor(model => model.Event.StartDateTime) - @Html.DisplayFor(model => model.Event.EndDateTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.EventStatus)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EventStatus)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.AffectedHosts)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DisplayAffectedHosts)
            <a target=_blank href="@appsettings.IA_Url?broken=true&server=@Uri.EscapeDataString(Model.Event.AffectedHosts)"><span class='glyphicon glyphicon-flash' style='color:red' title='Perform Impact Analysis'></span></a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.AffectedProjects)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.DisplayAffectedProjects)
            <a target=_blank href="@appsettings.IA_Url?system=@Uri.EscapeDataString(Model.Event.AffectedProjects)"><span class='glyphicon glyphicon-flash' style='color:red' title='Perform Impact Analysis'></span></a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.AffectedTeams)            
        </dt>
        <dd>
            @*Html.DisplayFor(model => model.DisplayAffectedTeams)*@
            @foreach (var team in Model.Teams)
            {

                var c = (Model.Teams.IndexOf(team) < Model.Teams.Count()-1) ? "," : "";

                if (IsTeamAcknowledged(team))
                {
                    <span id="idAffectedTeam-@team" class="acknowledged" title="@team acknowledged the Event">@team@c</span>
                }
                else
                {
                    <span id="idAffectedTeam-@team" class="not-acknowledged" title="Waiting for @team's acknowledgement">@team@c</span>
                }
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.Category)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Event.Category)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.Environment)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Event.Environment)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.ImpactAnalysis)
        </dt>
        <dd>
            @Html.TextAreaFor(model => model.Event.ImpactAnalysis,5,200, new { @readonly = true, @style = "border-width:1px;", @cols = "200" } )
        </dd>
        <dt>
            <span data-toggle="tooltip" data-placement="top" data-html="true" title="Acknowldege the event"><a role="button" class="@(User.Identity.IsAuthenticated? "":"hidden ")btn btn-primary btn-xs" data-toggle="modal" data-target="#idTeamAckModal" data-whatever=""><span class="glyphicon glyphicon-thumbs-up"></span></a></span>Team ACK
        </dt>
        <dd>
            <div id="idAckPartialView">
                @Html.Partial("AckPartial", Model.Acks)
            </div>

        </dd>
        <dt>
            <span data-toggle="tooltip" data-placement="top" data-html="true" title="Add the attachment"><a role="button" class="@(User.Identity.IsAuthenticated? "":"hidden ")btn btn-primary btn-xs" data-toggle="modal" data-target="#AttachModal" data-whatever=""><span class="glyphicon glyphicon-paperclip"></span></a></span>Attachment
        </dt>
        <dd>
            <div id="idAttachPartialView" style1="position:absolute; top:60px; left:620px; height:200px; overflow:hidden">
                @Html.Partial("AttachPartial", Model.Attachs)
            </div>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.MaintProcedure)
        </dt>
        <dd>
            @Html.TextAreaFor(model => model.Event.MaintProcedure, 5, 200, new { @readonly = true, @style = "border-width:1px;", @cols = "200" })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.ActionBy)
        </dt>        
        <dd>
            @Html.DisplayFor(model => model.Event.ActionBy)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.VerificationStep)
        </dt>
        <dd>
            @Html.TextAreaFor(model => model.Event.VerificationStep, 5, 200, new { @readonly = true, @style = "border-width:1px;", @cols = "200" })
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.HealthCheckBy)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Event.HealthCheckBy)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Event.FallbackProcedure)
        </dt>
        <dd>
            @Html.TextAreaFor(model => model.Event.FallbackProcedure, 5, 200, new { @readonly = true, @style = "border-width:1px;", @cols = "200" })
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.Reference)
        </dt>
        <dd>
            @if (!System.String.IsNullOrEmpty(Model.Event.Reference))
            {
                <a target=_blank href="@appsettings.CM_Url?i_CRN=@Model.Event.Reference">@Html.DisplayFor(model => model.Event.Reference)</a>
            }            
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.Result)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Event.Result)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.RiskLevel)
        </dt>
        <dd>
            <span class="cal-risklevel-@Model.Event.RiskLevel" stylex="font-size:14px">@Model.RiskLevel</span>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Event.RiskAnalysis)
        </dt>
        <dd>            
            @Html.TextAreaFor(model => model.Event.RiskAnalysis, 5, 200, new { @readonly = true, @style = "border-width:1px;", @cols = "200" })
        </dd>        

        <dt>Last Updated</dt>
        <dd>
           <i>@Html.DisplayFor(model => model.Event.UpdatedDate)</i>
        </dd>
</dl>
     
</div>
<div @(ViewBag.Modal != null ? "hidden" : "")>

        @if (@ViewBag.Redir != null)
        {
        <span @(User.IsInRole("Admins") ? "" : "hidden")><a href='@Context.Request.PathBase/Events/Edit?id=@Model.Event.ID&redir=@Uri.EscapeDataString(ViewBag.Redir)'>Edit</a> |</span>
        <a href="@Uri.UnescapeDataString(ViewBag.Redir)">Back</a>
        }
        else
        {
        <span @(User.IsInRole("Admins") ? "" : "hidden")><a href='@Context.Request.PathBase/Events/Edit?id=@Model.Event.ID'>Edit</a> |</span>
        <a asp-action="Index">Back</a>
        }

</div>

<!--Team Acknowledgement Modal-->
<div class="modal fade" id="idTeamAckModal" tabindex="-1" role="dialog" aria-labelledby="teamAckModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel">Team Acknowledgement</h4>
            </div>
            <div class="modal-body">
                <form id="idFormTeamAck" name="FormTeamAck" class="row" asp-controller="Acknowledgements" asp-action="Create" method="post">
                    <div class="form-group col-md-8">
                        <select id="idTeam" name="team" class="form-control select-placeholder"></select>
                        <span id="idTeamFieldValidationError" class="text-danger hidden">The Team field is required.</span>
                        <input type="hidden" class="form-control" id="idTeamAckEventID" name="EventID" value="@Model.Event.ID">
                        <input type="hidden" class="form-control" id="idTeakAckRedir" name="redir" value="@ViewBag.Redir">
                        <input type="hidden" class="form-control" id="idAjax" name="ajax" value="true">
                        <textarea rows="5" class="form-control" id="idAckMessage" name="AckMessage" placeholder="Message"></textarea>
                    </div>
                    <div class="form-group col-md-4 text-right">
                        <button type="submit" class="btn btn-ms btn-primary">Save</button>
                        <button type="button" class="btn btn-ms btn-primary" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!--Attachment Modal-->
<div class="modal fade" id="AttachModal" tabindex="-1" role="dialog" aria-labelledby="AttachModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel">Attachment</h4>
            </div>
            <div class="modal-body">
                <form id="idFormAttach" name="FormAttach" class="row" enctype="multipart/form-data" asp-controller="Attachments" asp-action="Upload" method="post">
                    <div class="form-group col-md-10">
                        <input type="hidden" class="form-control" id="idAttachEventID" name="EventID" value="">
                        <input type="hidden" class="form-control" id="idRedir" name="redir" value="this">
                        <input type="hidden" class="form-control" id="idAjax" name="ajax" value="true">
                        <input type="file" id="idFile" name="AttachFile" multiple>
                        <!--<input type="file" class="file" id="idFile" name="AttachFile" data-show-preview="true" multiple data-allowed-file-extensions='["gif", "png", "jpg", "xlsx", "xls", "txt", "doc", "docx", "ppt", "pptx", "log", "pdf", "zip", "tar", "gz"]' maxFileCount="2">-->                        
                        <div id="kv-error-2" class="alert alert-danger fade in" style="margin-top:10px;display:none"></div>
                        <!--<div id="kv-success-2" class="alert alert-success fade in" style="margin-top:10px;display:none"></div>-->
                    </div>
                    <div class="form-group col-md-2 text-right">
                        <button type="button" class="btn btn-ms btn-primary" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    /* ------ Team Acknowledgement START HERE ------ */
    $(document).ready(function () {
        /* pass the EventID and AffectedTeams to the Modal Form */
        $('#idTeamAckModal').on('shown.bs.modal', function () {
              $('#idTeam').focus()
        });

        $('#idTeamAckModal').on('show.bs.modal', function () {
            /* update the team selection list */
            var str = "@Model.Event.AffectedTeams";

            $('#idAckMessage').val('');
            $('#idTeam')
                .find('option')
                .remove()
                .end()
                .append('<option selected disabled>Team</option>')
            ;
            $('#idTeam').addClass('select-placeholder');
            $.each(str.split(','), function (key, value) {
                $('#idTeam').append('<option value="' + value + '">' + value + '</option>');
            });
        });

        /* mimic placeholder for dropdown list. Not quite work in FF. */
        $('select').change(function () {
            if ($(this).children('option:first-child').is(':selected')) {
                $(this).addClass('select-placeholder');
            } else {
                $(this).removeClass('select-placeholder');
            }
            $("#idTeamFieldValidationError").addClass('hidden');
        });

        /* Bind the Form submit - Save */
        $('#idFormTeamAck').on('submit', function (e) {
            var team = $(this).find('select[name="team"]').val();
            var eventid = $(this).find('input[name="EventID"]').val();

            if (team == null) {
                e.preventDefault();
                $("#idTeamFieldValidationError").removeClass('hidden');
            }
            else {
                /* 1st ajax call to save the acknowledgement (modal)
                   2nd ajax call to refresh the partial view */
                e.preventDefault();
                $.ajax({
                    type: $(this).attr('method'),
                    url: $(this).attr('action'),
                    data: $(this).serialize(),
                    success: function (result) {
                        $.ajax({
                            type: "get",
                            url: '@Url.Action("IndexPartial","Acknowledgements")',
                            data: 'eventid=' + eventid,
                            success: function (result) {
                                $("#idAckPartialView").html(result);
                                $('#idAffectedTeam-' + team).removeClass('not-acknowledged');
                                $('#idAffectedTeam-' + team).addClass('acknowledged');
                                $('#idTeamAckModal').removeClass('fade');
                                $('#idTeamAckModal').modal('hide');
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                alert('Status: ' + textStatus + ', Error: ' + errorThrown);
                            }
                        });
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Status: ' + textStatus + ', Error: ' + errorThrown);
                    }
                });
            }
        });
    //});
    /* ------ Team Acknowledgement END HERE ------ */

    
    /* ------ ATTACHMENTS CODE BEGIN HERE ------ */
    //$(document).ready(function () {
    var errorExist = false;
    var errorMsg = "";

    $("#idFile").fileinput({
        uploadAsync: true,
        allowedFileExtensions: ["gif", "png", "jpg", "xlsx", "xls", "txt", "doc", "docx", "ppt", "pptx", "log", "pdf", "zip", "tar", "gz"],
        maxFileCount: 5,
        elErrorContainer: "#kv-error-2"
    });

    /* Clear the loaded file when re-open the diag */
    $('#AttachModal').on('show.bs.modal', function () {
        $('.fileinput-remove-button').click();
        $('#kv-error-2').empty();
        $('#kv-error-2').attr("style", "margin-top:10px;display:none");
        errorExist = false; // reset the error flag
    })
    
    $('#AttachModal').on('shown.bs.modal', function () {
        $('.file-caption-name').focus();
        $('#idAttachEventID').val(@Model.Event.ID);
    })

    /* Clear the custom error message after press Remove button */
        $("#idFile").on('fileclear', function (event, data, msg) {
        //if ($('.file-caption-name').attr("title") == "Validation Error") {
          //  $('#kv-error-2').empty();
          //  $('#kv-error-2').attr("style", "margin-top:10px;display:none");
        //}
    })    

    /* Clear the error panel after re-open the diag */
        $("#idFile").on('filecleared', function (event, data, msg) {
        if (errorExist == false) {
            errorMsg = "";
            //$('#kv-error-2').empty();
            //$('#kv-error-2').attr("style", "margin-top:10px;display:");
            $('#kv-error-2').append("<BR>inside clear errorexist = false");
        }
        else {
            errorExist = false; // reset the error flag
            //$('#kv-error-2').attr("style", "margin-top:10px;display:");
            $('#kv-error-2').append("<BR>inside clear errorexist = true");
        }
    })

    /* Show and display the error */
    $("#idFile").on('fileerror', function (event, data, msg) {
        errorExist = true;
        $('#kv-error-2').empty();
        //$('#kv-error-2').append(msg);
        errorMsg = errorMsg.concat(errorMsg, msg, "<BR>");
        alert(errorMsg);
        $('#kv-error-2').append(errorMsg);
        $('#kv-error-2').attr("style", "margin-top:10px;display:");
    })

    $("#idFile").on('filecustomerror', function (event, params, msg) {
        //errorExist = true;
        //$('#kv-error-2').append(msg);
        //$('#kv-error-2').append("<BR>custom error");
        //$('#kv-error-2').attr("style", "margin-top:10px;display:");
    });

    /* Validate attachment file before upload */
    $("#idFile").on('fileloaded', function (event, data, msg) {
        //var filename = $('.file-caption-name').attr("title");
        //$('#kv-error-2').append("<BR>file loaded");
    })
  

    /* Bind the Form submit - Save */
    $('#idFormAttach').on('submit', function (e) {
        var eventid = $(this).find('input[name="EventID"]').val();

        if (eventid == null) {
            e.preventDefault();
        }
        else {
            /* 1st ajax call to save the acknowledgement (modal)
                2nd ajax call to refresh the partial view */
            e.preventDefault();
            $.ajax({
                type: $(this).attr('method'),
                url: $(this).attr('action'),
                data: new FormData(this),
                cache: false,
                processData: false, // Don't process the files
                contentType: false, // Set content type to false as jQuery will tell the server its a query string request
                success: function (result) {
                    $.ajax({
                        type: "get",
                        cache: false,
                        url: '@Url.Action("IndexPartial", "Attachments")',
                        data: 'eventid=' + eventid,
                        success: function (result) {
                            $("#idAttachPartialView").html(result);
                            $('#AttachModal').modal('hide');
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert('Status: ' + textStatus + ', Error: ' + errorThrown);
                        }
                    });
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    alert('Status: ' + textStatus + ', Error: ' + errorThrown);
                }
            });
        }
    });
    });

    /* ------ ATTACHMENTS CODE END HERE ------ */

</script>
